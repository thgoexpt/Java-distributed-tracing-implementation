<!--

    Copyright 2013-2020 The OpenZipkin Authors

    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
    in compliance with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software distributed under the License
    is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
    or implied. See the License for the specific language governing permissions and limitations under
    the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>io.zipkin.brave</groupId>
    <artifactId>brave-instrumentation-parent</artifactId>
    <version>5.12.7-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>brave-instrumentation-grpc</artifactId>
  <name>Brave Instrumentation: gRPC</name>

  <properties>
    <!-- Matches Export-Package in bnd.bnd -->
    <module.name>brave.grpc</module.name>

    <main.basedir>${project.basedir}/../..</main.basedir>
    <!-- grpc-java < 1.15 supports Java 6 https://github.com/grpc/grpc-java/issues/3961 Current versions support Java 7 eventhough TLS typically implies Java 8+ -->
    <main.java.version>1.6</main.java.version>
    <main.signature.artifact>java16</main.signature.artifact>

    <os-maven-plugin.version>1.6.2</os-maven-plugin.version>
    <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>

    <old-grpc>io.grpc:grpc-all:1.2.0:jar</old-grpc>
    <old-protoc>com.google.protobuf:protoc:3.2.0:exe:${os.detected.classifier}</old-protoc>

    <!-- disable mutability warning as TagContextBinaryMarshaller intentionally returns mixed -->
    <errorprone.args>-Xep:MixedMutabilityReturnType:OFF</errorprone.args>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>brave-instrumentation-rpc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-all</artifactId>
      <version>${grpc.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>brave-tests</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>brave-context-log4j2</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- for Generated annotation in tests -->
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>${os-maven-plugin.version}</version>
      </extension>
    </extensions>

    <plugins>
      <!-- Integration test old gRPC version -->
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>${protobuf-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>test-compile</goal>
              <goal>test-compile-custom</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <protocArtifact>
            com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
          </protocArtifact>
          <pluginId>grpc-java</pluginId>
          <pluginArtifact>
            io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}
          </pluginArtifact>
        </configuration>
      </plugin>
      <!-- maven-invoker-plugin's extraArtifacts are pulled from the local repository, not the
           remote ones. We manually resolve so that a brand new build slave with no cache will
           end up with the dependencies it needs. -->
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>get-old-grpc</id>
            <phase>test</phase>
            <goals>
              <goal>get</goal>
            </goals>
            <configuration>
              <artifact>${old-grpc}</artifact>
            </configuration>
          </execution>
          <execution>
            <id>get-old-protoc</id>
            <phase>test</phase>
            <goals>
              <goal>get</goal>
            </goals>
            <configuration>
              <artifact>${old-protoc}</artifact>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-invoker-plugin</artifactId>
        <configuration>
          <extraArtifacts>
            <extraArtifact>${old-grpc}</extraArtifact>
            <extraArtifact>${old-protoc}</extraArtifact>
          </extraArtifacts>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
